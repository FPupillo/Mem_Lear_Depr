# select images 2
rm(list=ls())
# select images for the task
library("readxl")
library(gtools)
library(dplyr)
library(lme4)
library(lmerTest)
library(car)
# retrieve info of the category
category<-read_excel("SI1.xlsx", sheet = "Sheet2")
# chack how many categories
# change fourth and fifth name
names(category)[4:5]<-c("modal_categ", "cat_agreement")
# get the number of objects per category
table<-category %>%
group_by(modal_categ) %>%
tally()
# order by modal categ and name agreement
table<-table[order(table$n, decreasing=T),]
#------------------------------------------------------------------------------
date()
# retrieve the file with info of the categories
category<-read_excel("SI1.xlsx", sheet = "Sheet2")
# change fourth and fifth names to get the hyphen
names(category)[4:5]<-c("modal_categ", "cat_agreement")
# select the categories
selCat<-c( "Outdoor activity & sport item", "Kitchen & utensil",
"Electronic device & accessory", "Hand labour tool & accessory")
# set the reward probabilities for the contingencies
Pcong<-0.75    # 75 for the conguent ones, the preferred category
Pincong<-(1-Pcong)/3
# Since the categories needs to appear randomly on the sceen,
# we can consider all the possible permutations of category and position
# We  then need 4 factorial (4*3*2*1) =24
categPermut<-permutations(n=4,r=4,v=categ,repeats.allowed=F)
categ<-selCat
categPermut<-permutations(n=4,r=4,v=categ,repeats.allowed=F)
categ
24*4
?permutations
# Since the categories needs to appear randomly on the sceen,
# we can consider all the possible permutations of category and position
# We  then need 4 factorial (4*3*2*1) =24
categPermut<-permutations(n=4,r=2,v=categ,repeats.allowed=F)
categPermut
# Since the categories needs to appear randomly on the sceen,
# we can consider all the possible permutations of category and position
# We  then need 4 factorial (4*3*2*1) =24
categPermut<-permutations(n=4,r=4,v=categ,repeats.allowed=F)
categPermut
4*3*2*1
allcombin<-cbind(block=rep("first_block", "second_block",each=nrow(categPermut)*2))
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allcombin<-rep(categPermut, 3)
# Since the categories needs to appear randomly on the sceen,
# we can consider all the possible permutations of category and position
# We  then need 4 factorial (4*3*2*1) =24
categPermut<-permutations(n=4,r=4,v=categ,repeats.allowed=F)
View(categPermut)
allcombin
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allcombin<-cbind(rep(categPermut, 3))
View(allcombin)
View(allcombin)
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allcombin<-rbind(rep(categPermut, 3))
View(allcombin)
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allcombin<-rbind(rep(categPermut, times =3))
View(allcombin)
categPermut
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allcombin<-rbind((categPermut,categPermut,categPermut))
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allcombin<-rbind(categPermut,categPermut,categPermut)
View(allcombin)
allList<-data.frame(cbind(categPermut, do.call(rbind, replicate(4, categPermut, simplify=FALSE))))
# Since the categories needs to appear randomly on the sceen,
# we can consider all the possible permutations of category and position
# We  then need 4 factorial (4*3*2*1) =24
categPermut<-permutations(n=4,r=4,v=categ,repeats.allowed=F)
allList<-data.frame(cbind(categPermut, do.call(rbind, replicate(4, categPermut, simplify=FALSE))))
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allList<-rbind(categPermut,categPermut,categPermut)
names(allList)[4:7]<-c("left_categ", "centleft_categ", "centright_categ", "right_categ")
# we need 4 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 4, 0)) # creating an empty arrray of 2 columns, 4 rows, and nothing on it
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 3, 0)) # creating an empty arrray of 2 columns, 4 rows, and nothing on it
# set the reward probabilities for the contingencies
highR<-0.75    # 75 for the preferred categ
lowR<-(1-highR)/3
categ<-selCat
# Since the categories needs to appear randomly on the sceen,
# we can consider all the possible permutations of category and position
# We  then need 4 factorial (4*3*2*1) =24
categPermut<-permutations(n=4,r=4,v=categ,repeats.allowed=F)
# we have 60 trials per block, so we can repeat the permutations three times
# and then randomly sample them
allList<-rbind(categPermut,categPermut,categPermut)
names(allList)[4:7]<-c("left_categ", "centleft_categ", "centright_categ", "right_categ")
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 3, 0)) # creating an empty arrray of 2 columns, 4 rows, and nothing on it
# set the reward probabilities for the contingencies
highC<-0.75    # 75 for more frequent feedback
lowC<-(1-highC)/3
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, Pincong, Pincong, Pincong,),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
library(gtools)
library(abind)
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, Pincong, Pincong, Pincong,),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC,),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 3, 0)) # creating an empty arrray of 2 columns, 4 rows, and nothing on it
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=3, byrow=T), along =3)
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 4, 0)) # creating an empty arrray of 2 columns, 3 rows, and nothing on it
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
contingencies
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 4, 0)) # creating an empty arrray of 2 columns, 3 rows, and nothing on it
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =2, ncol=4, byrow=T), along =3)
contingencies
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =1, ncol=4, byrow=T), along =3)
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(2, 4, 0)) # creating an empty arrray of 2 columns, 3 rows, and nothing on it
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =1, ncol=4, byrow=T), along =3)
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(1, 4, 0)) # creating an empty arrray of 2 columns, 3 rows, and nothing on it
# create the first list
# creating the contingencies for first list, by appending this matrix
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =1, ncol=4, byrow=T), along =3)
contingencies
# append now the contingencies after ther secodn change point
contingencies<-abind(contingencies, matrix(c(lowC, lowC, lowC, highC),
nrow =1, ncol=4, byrow=T), along =3)
contingencies
# we need 3 lists with different character-cateogry contingencies
# create an array
contingencies<-array(numeric(), c(1, 4, 0)) # creating an empty arrray of 2 columns, 3 rows, and nothing on it
contingencies<-abind(contingencies, matrix(c(highC, lowC, lowC, lowC),
# this means that the first category (outdoor activity) is the one with the high feedback
nrow =1, ncol=4, byrow=T), along =3)
# append now the contingencies after the first change point
contingencies<-abind(contingencies, matrix(c(lowC, highC, lowC, lowC),
nrow =1, ncol=4, byrow=T), along =3)
# append now the contingencies after ther secodn change point
contingencies<-abind(contingencies, matrix(c(lowC, lowC, lowC, highC),
nrow =1, ncol=4, byrow=T), along =3)
contingencies
dim(contingencies)[3]
# sample correct answer
corr_ans1<-sample(selCat,nrow(allList), prob = contingencies[1,,h], replace = T)
h<-1
# sample correct answer
corr_ans1<-sample(selCat,nrow(allList), prob = contingencies[1,,h], replace = T)
corr_ans1
# make sure that the contingencies are balanced
corr_ans1<-shuffle_corr_ans(corr_ans1, length(corr_ans1), probab = contingencies[1,,h], Pcong = Pcong, Pincong = Pincong )
834/5
166/4
10/66
3/4
3/4
8*24
8*8
192+64
32*4
34*8
32*8
8/24
